# This workflow will be triggered on pushes to the 'main' branch and pull requests.
# It is a basic example for a Node.js project. You may need to modify it
# based on the specific technologies you use for your CDN.

name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    
    # Define the environment variables, secrets, etc. that your project needs.
    # For example:
    # env:
    #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      # Step 1: Checks out your repository code so the workflow can access it.
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Sets up a Node.js environment. Change this if you are using a different language (e.g., python).
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Use a version appropriate for your project

      # Step 3: Installs the project dependencies.
      - name: Install dependencies
        run: npm install

      # Step 4: Runs the build process for your application.
      - name: Build application
        run: npm run build

      # Step 5: Runs the tests for your application. This is crucial for ensuring code quality.
      - name: Run tests
        run: npm test

  # Optional: A separate job for deployment. This will only run after the 'build_and_test' job is successful.
  # This section needs to be customized for your specific deployment target (e.g., AWS, Azure, Google Cloud).
  # deploy:
  #   needs: build_and_test
  #   if: github.ref == 'refs/heads/main' # Only deploy when a push is made to the main branch
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1

  #     - name: Deploy to S3
  #       run: aws s3 sync ./build/ s3://your-cdn-bucket-name --delete

  #     - name: Deploy to S3
  #       run: aws s3 sync ./build/ s3://your-cdn-bucket-name --delete
